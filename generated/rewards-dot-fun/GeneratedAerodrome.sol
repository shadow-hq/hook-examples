// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

// THIS FILE IS AUTOGENERATED. DO NOT EDIT.
library GeneratedAerodrome {
    struct Route {
        address from;
        address to;
        bool stable;
        address factory;
    }

    struct SwapExactETHForTokensParams {
        uint256 amountOutMin;
        Route[] routes;
        address to;
        uint256 deadline;
    }

    struct SwapExactETHForTokensResult {
        uint256[] amounts;
    }

    struct SwapExactTokensForETHParams {
        uint256 amountIn;
        uint256 amountOutMin;
        Route[] routes;
        address to;
        uint256 deadline;
    }

    struct SwapExactTokensForETHResult {
        uint256[] amounts;
    }

    struct AddLiquidityParams {
        address tokenA;
        address tokenB;
        bool stable;
        uint256 amountADesired;
        uint256 amountBDesired;
        uint256 amountAMin;
        uint256 amountBMin;
        address to;
        uint256 deadline;
    }

    struct AddLiquidityResult {
        uint256 amountA;
        uint256 amountB;
        uint256 liquidity;
    }

    struct AddLiquidityETHParams {
        address token;
        bool stable;
        uint256 amountTokenDesired;
        uint256 amountTokenMin;
        uint256 amountETHMin;
        address to;
        uint256 deadline;
    }

    struct AddLiquidityETHResult {
        uint256 amountToken;
        uint256 amountETH;
        uint256 liquidity;
    }

    struct LockPermanent {
        address owner;
        uint256 tokenId;
        uint256 amount;
        uint256 _ts;
    }

    struct Voted {
        address voter;
        address pool;
        uint256 tokenId;
        uint256 weight;
        uint256 totalWeight;
        uint256 timestamp;
    }
}
